// Package registry provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package registry

import (
	"time"
)

// Competition defines model for Competition.
type Competition struct {
	CreatedAt  time.Time `json:"created_at"`
	Id         int64     `json:"id"`
	LevelId    int64     `json:"level_id"`
	LocationId int64     `json:"location_id"`
	Name       string    `json:"name"`
	RecordHash *[]byte   `json:"record_hash,omitempty"`
	SportId    int64     `json:"sport_id"`
	TxHash     *string   `json:"tx_hash,omitempty"`
	UpdatedAt  time.Time `json:"updated_at"`
}

// CompetitionLevel defines model for CompetitionLevel.
type CompetitionLevel struct {
	CreatedAt  time.Time `json:"created_at"`
	Id         int64     `json:"id"`
	Name       string    `json:"name"`
	RecordHash *[]byte   `json:"record_hash,omitempty"`
	TxHash     *string   `json:"tx_hash,omitempty"`
	UpdatedAt  time.Time `json:"updated_at"`
}

// CompetitionTeams defines model for CompetitionTeams.
type CompetitionTeams struct {
	CompetitionId int64     `json:"competition_id"`
	CreatedAt     time.Time `json:"created_at"`
	Id            int64     `json:"id"`
	RecordHash    *[]byte   `json:"record_hash,omitempty"`
	TeamId        int64     `json:"team_id"`
	TxHash        *string   `json:"tx_hash,omitempty"`
	UpdatedAt     time.Time `json:"updated_at"`
}

// Country defines model for Country.
type Country struct {
	CreatedAt  time.Time `json:"created_at"`
	Id         int64     `json:"id"`
	Name       string    `json:"name"`
	RecordHash *[]byte   `json:"record_hash,omitempty"`
	TxHash     *string   `json:"tx_hash,omitempty"`
	UpdatedAt  time.Time `json:"updated_at"`
}

// Language defines model for Language.
type Language struct {
	CreatedAt  time.Time `json:"created_at"`
	Id         int64     `json:"id"`
	Name       string    `json:"name"`
	RecordHash *[]byte   `json:"record_hash,omitempty"`
	TxHash     *string   `json:"tx_hash,omitempty"`
	UpdatedAt  time.Time `json:"updated_at"`
}

// Location defines model for Location.
type Location struct {
	Address     *string    `json:"address,omitempty"`
	City        *string    `json:"city,omitempty"`
	CountryId   int64      `json:"country_id"`
	CreatedAt   *time.Time `json:"created_at,omitempty"`
	FullAddress string     `json:"full_address"`
	Id          int64      `json:"id"`
	RecordHash  *[]byte    `json:"record_hash,omitempty"`
	State       *string    `json:"state,omitempty"`
	TxHash      *string    `json:"tx_hash,omitempty"`
	UpdatedAt   *time.Time `json:"updated_at,omitempty"`
}

// Match defines model for Match.
type Match struct {
	CreatedAt  time.Time               `json:"created_at"`
	Id         int64                   `json:"id"`
	LocationId *int64                  `json:"location_id,omitempty"`
	MatchTime  time.Time               `json:"match_time"`
	Metadata   *map[string]interface{} `json:"metadata,omitempty"`
	RecordHash *[]byte                 `json:"record_hash,omitempty"`
	StageId    int64                   `json:"stage_id"`
	TxHash     *string                 `json:"tx_hash,omitempty"`
	UpdatedAt  time.Time               `json:"updated_at"`
}

// MatchParticipant defines model for MatchParticipant.
type MatchParticipant struct {
	CreatedAt  time.Time `json:"created_at"`
	Id         int64     `json:"id"`
	IsWinner   *bool     `json:"is_winner,omitempty"`
	MatchId    int64     `json:"match_id"`
	RecordHash *[]byte   `json:"record_hash,omitempty"`
	Score      int       `json:"score"`
	TeamId     int64     `json:"team_id"`
	TxHash     *string   `json:"tx_hash,omitempty"`
	UpdatedAt  time.Time `json:"updated_at"`
}

// NewCompetition defines model for NewCompetition.
type NewCompetition struct {
	LevelId    int64  `json:"level_id"`
	LocationId int64  `json:"location_id"`
	Name       string `json:"name"`
	SportId    int64  `json:"sport_id"`
}

// NewCompetitionLevel defines model for NewCompetitionLevel.
type NewCompetitionLevel struct {
	Name string `json:"name"`
}

// NewCompetitionTeams defines model for NewCompetitionTeams.
type NewCompetitionTeams struct {
	CompetitionId int64 `json:"competition_id"`
	TeamId        int64 `json:"team_id"`
}

// NewCountry defines model for NewCountry.
type NewCountry struct {
	Name string `json:"name"`
}

// NewLanguage defines model for NewLanguage.
type NewLanguage struct {
	Name string `json:"name"`
}

// NewLocation defines model for NewLocation.
type NewLocation struct {
	Address     *string `json:"address,omitempty"`
	City        *string `json:"city,omitempty"`
	CountryId   int64   `json:"country_id"`
	FullAddress string  `json:"full_address"`
	State       *string `json:"state,omitempty"`
}

// NewMatch defines model for NewMatch.
type NewMatch struct {
	LocationId *int64                  `json:"location_id,omitempty"`
	MatchTime  time.Time               `json:"match_time"`
	Metadata   *map[string]interface{} `json:"metadata,omitempty"`
	StageId    int64                   `json:"stage_id"`
}

// NewMatchParticipant defines model for NewMatchParticipant.
type NewMatchParticipant struct {
	IsWinner *bool `json:"is_winner,omitempty"`
	MatchId  int64 `json:"match_id"`
	Score    int   `json:"score"`
	TeamId   int64 `json:"team_id"`
}

// NewPerson defines model for NewPerson.
type NewPerson struct {
	BirthDate time.Time `json:"birth_date"`
	CountryId int64     `json:"country_id"`
	Name      string    `json:"name"`
}

// NewPrize defines model for NewPrize.
type NewPrize struct {
	CompetitionId int64  `json:"competition_id"`
	CurrencyCode  string `json:"currency_code"`
	PlaceBracket  string `json:"place_bracket"`
	PrizeAmount   int    `json:"prize_amount"`
}

// NewRole defines model for NewRole.
type NewRole struct {
	Name string `json:"name"`
}

// NewSport defines model for NewSport.
type NewSport struct {
	Description *string `json:"description,omitempty"`
	MaxTeamSize int     `json:"max_team_size"`
	MinTeamSize int     `json:"min_team_size"`
	Name        string  `json:"name"`
}

// NewStage defines model for NewStage.
type NewStage struct {
	CompetitionId int64      `json:"competition_id"`
	EndTime       *time.Time `json:"end_time,omitempty"`
	Name          string     `json:"name"`
	StartTime     time.Time  `json:"start_time"`
}

// NewTeam defines model for NewTeam.
type NewTeam struct {
	CountryId      int64     `json:"country_id"`
	FoundationDate time.Time `json:"foundation_date"`
	Name           string    `json:"name"`
}

// NewTeamAchievements defines model for NewTeamAchievements.
type NewTeamAchievements struct {
	PrizeId int64 `json:"prize_id"`
	TeamId  int64 `json:"team_id"`
}

// Person defines model for Person.
type Person struct {
	BirthDate  time.Time `json:"birth_date"`
	CountryId  int64     `json:"country_id"`
	CreatedAt  time.Time `json:"created_at"`
	Id         int64     `json:"id"`
	Name       string    `json:"name"`
	RecordHash *[]byte   `json:"record_hash,omitempty"`
	TxHash     *string   `json:"tx_hash,omitempty"`
	UpdatedAt  time.Time `json:"updated_at"`
}

// Prize defines model for Prize.
type Prize struct {
	CompetitionId int64     `json:"competition_id"`
	CreatedAt     time.Time `json:"created_at"`
	CurrencyCode  string    `json:"currency_code"`
	Id            int64     `json:"id"`
	PlaceBracket  string    `json:"place_bracket"`
	PrizeAmount   int       `json:"prize_amount"`
	RecordHash    *[]byte   `json:"record_hash,omitempty"`
	TxHash        *string   `json:"tx_hash,omitempty"`
	UpdatedAt     time.Time `json:"updated_at"`
}

// Role defines model for Role.
type Role struct {
	CreatedAt  time.Time `json:"created_at"`
	Id         int64     `json:"id"`
	Name       string    `json:"name"`
	RecordHash *[]byte   `json:"record_hash,omitempty"`
	TxHash     *string   `json:"tx_hash,omitempty"`
	UpdatedAt  time.Time `json:"updated_at"`
}

// Sport defines model for Sport.
type Sport struct {
	CreatedAt   time.Time `json:"created_at"`
	Description *string   `json:"description,omitempty"`
	Id          int64     `json:"id"`
	MaxTeamSize int       `json:"max_team_size"`
	MinTeamSize int       `json:"min_team_size"`
	Name        string    `json:"name"`
	RecordHash  *[]byte   `json:"record_hash,omitempty"`
	TxHash      *string   `json:"tx_hash,omitempty"`
	UpdatedAt   time.Time `json:"updated_at"`
}

// Stage defines model for Stage.
type Stage struct {
	CompetitionId int64      `json:"competition_id"`
	CreatedAt     time.Time  `json:"created_at"`
	EndTime       *time.Time `json:"end_time,omitempty"`
	Id            int64      `json:"id"`
	Name          string     `json:"name"`
	RecordHash    *[]byte    `json:"record_hash,omitempty"`
	StartTime     time.Time  `json:"start_time"`
	TxHash        *string    `json:"tx_hash,omitempty"`
	UpdatedAt     time.Time  `json:"updated_at"`
}

// Team defines model for Team.
type Team struct {
	CountryId      int64     `json:"country_id"`
	CreatedAt      time.Time `json:"created_at"`
	FoundationDate time.Time `json:"foundation_date"`
	Id             int64     `json:"id"`
	Name           string    `json:"name"`
	RecordHash     *[]byte   `json:"record_hash,omitempty"`
	TxHash         *string   `json:"tx_hash,omitempty"`
	UpdatedAt      time.Time `json:"updated_at"`
}

// TeamAchievements defines model for TeamAchievements.
type TeamAchievements struct {
	CreatedAt  time.Time `json:"created_at"`
	Id         int64     `json:"id"`
	PrizeId    int64     `json:"prize_id"`
	RecordHash *[]byte   `json:"record_hash,omitempty"`
	TeamId     int64     `json:"team_id"`
	TxHash     *string   `json:"tx_hash,omitempty"`
	UpdatedAt  time.Time `json:"updated_at"`
}

// PostCompetitionLevelsJSONRequestBody defines body for PostCompetitionLevels for application/json ContentType.
type PostCompetitionLevelsJSONRequestBody = NewCompetitionLevel

// PostCompetitionTeamsJSONRequestBody defines body for PostCompetitionTeams for application/json ContentType.
type PostCompetitionTeamsJSONRequestBody = NewCompetitionTeams

// PostCompetitionsJSONRequestBody defines body for PostCompetitions for application/json ContentType.
type PostCompetitionsJSONRequestBody = NewCompetition

// PostCountriesJSONRequestBody defines body for PostCountries for application/json ContentType.
type PostCountriesJSONRequestBody = NewCountry

// PostLanguagesJSONRequestBody defines body for PostLanguages for application/json ContentType.
type PostLanguagesJSONRequestBody = NewLanguage

// PostLocationsJSONRequestBody defines body for PostLocations for application/json ContentType.
type PostLocationsJSONRequestBody = NewLocation

// PostMatchParticipantsJSONRequestBody defines body for PostMatchParticipants for application/json ContentType.
type PostMatchParticipantsJSONRequestBody = NewMatchParticipant

// PostMatchesJSONRequestBody defines body for PostMatches for application/json ContentType.
type PostMatchesJSONRequestBody = NewMatch

// PostPersonsJSONRequestBody defines body for PostPersons for application/json ContentType.
type PostPersonsJSONRequestBody = NewPerson

// PostPrizesJSONRequestBody defines body for PostPrizes for application/json ContentType.
type PostPrizesJSONRequestBody = NewPrize

// PostRolesJSONRequestBody defines body for PostRoles for application/json ContentType.
type PostRolesJSONRequestBody = NewRole

// PostSportsJSONRequestBody defines body for PostSports for application/json ContentType.
type PostSportsJSONRequestBody = NewSport

// PostStagesJSONRequestBody defines body for PostStages for application/json ContentType.
type PostStagesJSONRequestBody = NewStage

// PostTeamAchievementsJSONRequestBody defines body for PostTeamAchievements for application/json ContentType.
type PostTeamAchievementsJSONRequestBody = NewTeamAchievements

// PostTeamsJSONRequestBody defines body for PostTeams for application/json ContentType.
type PostTeamsJSONRequestBody = NewTeam
